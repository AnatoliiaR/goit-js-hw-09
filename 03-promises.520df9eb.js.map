{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAkBC,GAClBA,EAAEC,iBACA,IAAIC,EAASC,OAAOH,EAAEI,OAAOF,OAAOG,OAChCC,EAAQH,OAAOH,EAAEI,OAAOG,MAAMF,OAC9BG,EAAOL,OAAOH,EAAEI,OAAOI,KAAKH,OAEhC,IAAK,IAAII,EAAW,EAAGA,GAAYP,EAAQO,GAAY,EAErDC,EAAcD,EAAUH,GACrBK,MAAK,EAACC,SAAEA,EAAQL,MAAEA,MAEjBM,EAAAlB,GAASmB,OAAOC,QAAQ,qBAAqBH,QAAeL,MAAU,IAEvES,OAAM,EAACJ,SAAEA,EAAQL,MAAEA,MAElBM,EAAAlB,GAASmB,OAAOG,QAAQ,oBAAoBL,QAAeL,MAAU,IAGzED,GAASE,EAIX,SAASE,EAAcE,EAAUL,GAC/B,MAAMW,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,C,SAAEV,E,MAAUL,IAGpBgB,EAAO,C,SAAEX,E,MAAUL,GAAQ,GAE5BA,EACH,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\ne.preventDefault();\n  let amount = Number(e.target.amount.value);\n  let delay = Number(e.target.delay.value);\n  let step = Number(e.target.step.value);\n  \n  for (let position = 1; position <= amount; position += 1) {\n    \n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        // window.alert(`Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // window.alert(\"no\");\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    \n    delay += step;\n  }\n  \n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          // Fulfill\n          resolve({ position, delay });\n        } else {\n          // Reject\n          reject({ position, delay });\n        }\n      }, delay);\n      return\n\n    });  \n      \n  }\n\n\n}\n\n\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","addEventListener","e","preventDefault","amount","Number","target","value","delay1","delay","step","position1","createPromise","then","position","$parcel$interopDefault","Notify","success","catch","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.520df9eb.js.map"}